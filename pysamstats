#!/usr/bin/env python


from optparse import OptionParser
import errno


from pysam import Samfile
from pysamstats import print_coverage, print_coverage_strand


stats_types = ('coverage', 'coverage_strand')
usage = 'usage: %prog [options] FILE'
parser = OptionParser()
parser.add_option('-t', '--type', dest='type', help='type of statistics to print: %s' % ', '.join(stats_types), default='coverage')
parser.add_option('-c', '--chromosome', dest='chromosome', help='chromosome name', default=None)
parser.add_option('-s', '--start', dest='start', type='int', help='start position (1-based)', default=None)
parser.add_option('-e', '--end', dest='end', type='int', help='end position (1-based)', default=None)
parser.add_option('-d', '--delimiter', dest='delimiter', help='field delimiter for output (default is tab character)', default='\t')
parser.add_option('-o', '--omit-header', dest='omit_header', help='omit header row from output', action='store_true')
parser.add_option('-p', '--progress', dest='progress', type='int', help='report progress every N rows', metavar='N', default=100000)
options, args = parser.parse_args()
if len(args) != 1:
    parser.error('incorrect number of arguments; expected one argument (SAM or BAM file name)')

samfile = Samfile(args[0])
chrom = options.chromosome
start = options.start - 1 if options.start is not None else None
end = options.end - 1 if options.end is not None else None

try:

    if options.type == 'coverage':
        print_coverage(samfile, chrom, start, end, delimiter=options.delimiter, omit_header=options.omit_header, progress=options.progress)
        
    elif options.type == 'coverage_strand':
        print_coverage_strand(samfile, chrom, start, end, delimiter=options.delimiter, omit_header=options.omit_header, progress=options.progress)
        
    else:
        parser.error('unsupported statistics type: "%s"; expected one of %s' % (options.type, stats_types))

except IOError as e:
    if e.errno == errno.EPIPE:
        pass # ignore broken pipe
    else:
        raise
